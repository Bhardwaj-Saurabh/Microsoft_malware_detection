from src.exception import MalwareException
from src.logger import logging
from src.entity.config_entity import DataIngestionConfig
from src.entity.artifact_entity import DataIngestionArtifact
from src.utils.main_utils import reduce_mem_usage
import os,sys
from pandas import DataFrame
from src.data_access.malware_data import MicrosoftMalwareData
# from src.utils.main_utils import read_yaml_file
from src.constant.training_pipeline import SCHEMA_FILE_PATH
from src.constant.training_pipeline import FILE_PATH


class DataIngestion:

    def __init__(self,data_ingestion_config:DataIngestionConfig):
        try:
            self.data_ingestion_config=data_ingestion_config
            #self._schema_config = read_yaml_file(SCHEMA_FILE_PATH)
        except Exception as e:
            raise MalwareException(e,sys)

    def export_data_into_feature_store(self, file_path = FILE_PATH) -> DataFrame:
        """
        Export mongo db collection record as data frame into feature
        """
        try:
            logging.info("Exporting data from data store to feature store")
            microsoft_data = MicrosoftMalwareData(file_path).read_data()
            feature_store_file_path = self.data_ingestion_config.feature_store_file_path            

            #creating folder
            dir_path = os.path.dirname(feature_store_file_path)
            os.makedirs(dir_path,exist_ok=True)
            microsoft_data.to_csv(feature_store_file_path,index=False,header=True)
            return microsoft_data
        except  Exception as e:
            raise  MalwareException(e, sys)

    
    def initiate_data_ingestion(self) -> DataIngestionArtifact:
        try:
            dataframe = self.export_data_into_feature_store()
            dataframe = reduce_mem_usage(dataframe)
            #dataframe = dataframe.drop(self._schema_config["drop_columns"],axis=1)
            
            data_ingestion_artifact = DataIngestionArtifact(feature_store_file_path=self.data_ingestion_config.feature_store_file_path)
            return data_ingestion_artifact
        except Exception as e:
            raise MalwareException(e,sys)